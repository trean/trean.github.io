---
layout: post
title:  "Botkit (перевод)"
categories: js-notes 
image: /img/posts/botkit.jpg
excerpt_separator: <!--more--> 
---

*Перевод статьи <a href="http://www.nickhammond.com/botkit/" rel="nofollow noopener" target="_blank">Botkit</a> <a href="http://www.nickhammond.com" rel="nofollow noopener" target="_blank">Ника Хаммонда</a>.*

Я всегда был очарован простыми системами обмена сообщениями. Раньше, когда СМС были основной платформой сообщений, я работал в агентстве над созданием различных проектов на базе текста.<!--more--> 

Один проект был для антитабачной кампании, и у него был динамический поток сообщений и идея заключалась в том, чтобы оживить пагубную привычку, придать ей индивидуальность. Постоянное напоминание пользователю о том, что он пытается бросить, хочет отказаться от своей зависимости. Это был действительно забавный проект, и мы использовали голосовой API, чтобы дать зависимости реальный голос.

Я создал несколько других,  аналогичных этому, проектов, и их простотота, и в то же время эффективность впечатляют. Такой формат отправки и приема сообщений невероятно доступен.

Однажды вечером я пошел на встречу <a href="http://refreshaustin.com/" rel="nofollow noopener" target="_blank">Refresh Austin</a>  и был очень взволнован, услышав там о новом инструменте под названием <a href="http://howdy.ai/botkit/" rel="nofollow noopener" target="_blank">Botkit</a>. Это простая библиотека для создания ботов для **Slack**, невероятно простая библиотека. Вот, просто позвольте мне показать вам.

**Botkit** базируется на **node** и вы можете использовать его вместе с другими node-пакетами, чтобы получить нужную вам функциональность. Чтобы попробовать, я начал с простого бота, который захватывает последнее видео с канала YouTube.

Конечно, вы могли бы использовать API YouTube и отправить заявку чтобы получать свежие видео с канала, но я собираюсь сделать проще и просто "сграбить" страницу канала. Мне не хочется копаться в API, мне просто нужен один кусок данных, и мы можем использовать для этого библиотеку <a href="https://www.npmjs.com/package/scrape" rel="nofollow noopener" target="_blank">Scrape</a> .

Пройдите этапы настройки бота на <a href="http://howdy.ai.botkit/" rel="nofollow noopener" target="_blank">сайте Botkit</a>  и добавте нового бота в вашу Slack команду. Как только вы сделали это, мы можем начать писать скрипт бота.

Botkit позволяет вам слушать, отвечать, и вести беседы из нескольких сообщений. Вы можете сохранить супер простоту и просто реагировать на ключевые слова или вы можете принять более активное участие и вести мульти-переписку с ботом. Для этого нам нужен бот, который будет слушать простую фразу, "casey me", с помощью кторой мы будем получать новое видео с <a href="https://www.youtube.com/user/caseyneistat/videos" rel="nofollow noopener" target="_blank">канала Casey</a> .

Идем дальше и начнем настройку бота, мы назовем этот файл **bot.js**:

{% highlight js linenos %}
var Botkit = require('botkit');
var Scrape = require('scrape');

var controller = Botkit.slackbot({
  debug: false,
  logLevel: 7 // verbose logging
});


// connect the bot to a stream of messages
controller.spawn({
  token: slackbot_token
}).startRTM()
{% endhighlight %}

**startRTM подключается в реальном времени к системе обмена сообщениями Slack API.*

Если вы еще не установили пакет **Scrape**, сделайте это с помощью команды `npm install scrape`. Теперь если мы запустим **bot.js** файл с помощью node, мы должны увидеть нашего бота в нашей команде Slack. Боже, это было легко. Как правило, вы должны написать код для управления открытием сокета, обработки входящих сообщений, отключения и т. д.

Бот пока не может что-либо делать, он просто подключается и все. Теперь мы можем заставить его слушать что-нибудь в Slack-чате.

Вот метод, с помощью которого бот может слушать:

{% highlight js linenos %}
controller.hears('phrase, regex, or keyword to listen to', ['ambient', 'direct_message','direct_mention','mention'],function(bot,message) {
  bot.reply(message, "I'm alive!");
});
{% endhighlight %}

Первым аргументом `hears` может быть простая строка или регулярное выражение, которое соответствует тому, что вы хотите. Вторым аргументом является массив различных типов сообщений, которые бот может слушать. Теперь мы знаем все настройки, которые нужно поменять, чтобы бот реагировал на то, что мы хотим.

{% highlight js linenos %}
controller.hears('casey me',['ambient', 'direct_message','direct_mention','mention'],function(bot,message) {
  Scrape.request('https://www.youtube.com/user/caseyneistat/videos', function (err, $) {
      if (err) return console.error(err);

      video = $('.channels-content-item .yt-uix-tile-link').first();
      url = "https://youtube.com" + video.attribs.href;

      bot.reply(message, video.text + " " + url);
  });
});
{% endhighlight %}

Если посмотреть в исходный код Ютуба, можно увидеть, что нам надо взять первый `.channels-content-item` и затем мы можем взять оттуда адрес. Затем мы говорим боту ответить на оригинальное сообщение текстом из URL и ссылкой на видео. Поскольку мы вставляем URL-адрес в сообщение, Slack подгрузит и покажет превью видео-ролика, подробности в <a href="https://api.slack.com/docs/formatting" rel="nofollow noopener" target="_blank">документации по форматированию Salck</a>.

![youtube video preview](http://www.nickhammond.com/images/posts/2016-02-16/casey-me.png) 

Это довольно стильно. Думаю, теперь вы сможете использовать **Botkit** множеством других способов! Вы можете создавать более сложные инструменты, которые взаимодействуют с API, обобщают данные из различных источников. Вы также можете запустить Botkit в вашей внутренней сети, чтобы получить доступ к любым данным или сервисам сети, которые Вы не хотите показывать другим так, как они слишком хороши.

Что здорово в **Botkit**, так это возможность использовать любой **Node-пакет**, и это дает бесконечное количество возможностей. Я уже настроил персональную команду в Слаке и начал писать различных других ботов, чтобы создать моего личного маленького бота-ассистента, и это замечательно.

**Стоит отметить еще одну вещь, так как это не очевидно. Если вы хотите, чтобы бот был в вашем канале, вы должны пригласить его туда. Если Вы не приглашаете его на канал, то вы можете просто отправить ему персональное сообщение вместо этого.*
